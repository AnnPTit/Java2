/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javasoft203_re.View;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javasoft203_re.Model.LopHoc;
import javasoft203_re.Model.SinhVien;
import javasoft203_re.Service.LopHocService;
import javasoft203_re.Service.SinhVienService;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADMIN
 */
public class SinhVienForm extends javax.swing.JFrame {

    /**
     * Creates new form SinhVienForm
     */
    DefaultTableModel model;
    // tao model quan lis combobox
    DefaultComboBoxModel<String> cbModelten;
    // tao mang de luu cac checkbox
    private JCheckBox[] danhSachMonHoc;
    LopHocService lopHocService;
    SinhVienService sinhVienService;

    public SinhVienForm() {
        initComponents();

        model = (DefaultTableModel) tblSinhVien.getModel();
        lopHocService = new LopHocService();
        setUpCbxLopHoc();
        danhSachMonHoc = new JCheckBox[]{ckbJava, ckbCplus, ckbCsap};
        sinhVienService = new SinhVienService();
        layDanhSachSinhVien();
    }

    public void setUpCbxLopHoc() {
        cbModelten = new DefaultComboBoxModel<>();
        List<LopHoc> lopHocs = lopHocService.layTatCaLopHoc();
        for (int i = 0; i < lopHocs.size(); i++) {
            cbModelten.addElement(lopHocs.get(i).getTen());
        }
        cbxLop.setModel(cbModelten);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbxLop = new javax.swing.JComboBox<>();
        ckbJava = new javax.swing.JCheckBox();
        ckbCplus = new javax.swing.JCheckBox();
        ckbCsap = new javax.swing.JCheckBox();
        btnADD = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSinhVien = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Quản lí sinh viên ");

        jLabel2.setText("Tên Sv");

        jLabel3.setText("Lớp học ");

        jLabel4.setText("Môn học");

        cbxLop.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        ckbJava.setText("Java");

        ckbCplus.setText("C++");

        ckbCsap.setText("C#");

        btnADD.setText("Thêm");
        btnADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnADDActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");

        tblSinhVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tên Sv", "Lớp Học", "Môn Học"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblSinhVien);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(187, 187, 187)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ckbJava)
                                .addGap(27, 27, 27)
                                .addComponent(ckbCplus)
                                .addGap(18, 18, 18)
                                .addComponent(ckbCsap)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnReset))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbxLop, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnSua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnADD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnADD))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cbxLop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(btnSua)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(ckbJava)
                            .addComponent(ckbCplus)
                            .addComponent(ckbCsap)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnXoa)
                        .addGap(27, 27, 27)
                        .addComponent(btnReset)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnADDActionPerformed
        // TODO add your handling code here:
        SinhVien sinhVien = validateSinhVien();
        if (sinhVien != null) {
            try {
                luuThongTinSinhVien(sinhVien);
            } catch (SQLException ex) {
                Logger.getLogger(SinhVienForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnADDActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        int index = tblSinhVien.getSelectedRow();
        if (index < 0) {
            JOptionPane.showMessageDialog(this, "Chọn một sinh viên");
            return;
        }
        String idString = model.getValueAt(index, 0).toString();
        int id = Integer.valueOf(idString);
        try {
            xoaThongTinSinhVien(id);
            model.removeRow(index);
        } catch (SQLException ex) {
            System.out.println("Lỗi r");
            Logger.getLogger(SinhVienForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        SinhVien sinhVien = validateSinhVien();
        if (sinhVien != null) {
            int selectRow = tblSinhVien.getSelectedRow();
            if (selectRow < 0) {
                JOptionPane.showMessageDialog(this,
                        "Vui long chon 1 sinh vien",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
            String idStr = model.getValueAt(selectRow, 0).toString();
            int id = Integer.valueOf(idStr);
            sinhVien.setId(id);
            try {
                suaThongTin(sinhVien);

                // sua thong tin len table 
                String ten = sinhVien.getTen();
                String lop = sinhVien.getLopHoc().getTen();
                String mon = String.join(",", sinhVien.getMonHoc());

                model.setValueAt(ten, selectRow, 1);
                model.setValueAt(lop, selectRow, 2);
                model.setValueAt(mon, selectRow, 3);

                JOptionPane.showMessageDialog(this, "Sua thong tin sinh vien thanh cong");

            } catch (SQLException ex) {
                Logger.getLogger(SinhVienForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    public void suaThongTin(SinhVien sinhVien) throws SQLException {
        this.sinhVienService.suaThongTinSinhVien(sinhVien);
    }

    public SinhVien validateSinhVien() {
        String ten = txtName.getText();
        if (ten.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Tên trống ", "ERORR", JOptionPane.ERROR_MESSAGE);
            txtName.requestFocus();
            return null;
        }
        String tenlophoc = cbxLop.getSelectedItem().toString();
        LopHoc lopHoc = lopHocService.layLopHocTheoTen(tenlophoc);
        if (lopHoc == null) {
            JOptionPane.showMessageDialog(this, "Lớp học không tồn tại ");
            return null;
        }
        List<String> monHoc = new ArrayList<>();
        for (int i = 0; i < danhSachMonHoc.length; i++) {
            if (danhSachMonHoc[i].isSelected()) {
                monHoc.add(danhSachMonHoc[i].getText());
            }
            boolean isValid = ckbJava.isSelected() || ckbCplus.isSelected() ||ckbCsap.isSelected() ;
            
            if(isValid == false){
                JOptionPane.showMessageDialog(this,"chọn lớp");
                return null;
               
            }

        }

        SinhVien sinhVien = new SinhVien();
        sinhVien.setTen(ten);
        sinhVien.setLopHoc(lopHoc);
        sinhVien.setMonHoc(monHoc);

        return sinhVien;
    }

    public void luuThongTinSinhVien(SinhVien sinhVien) throws SQLException {
        SinhVien sinhVienDaluu = this.sinhVienService.luuThongTinSinhVien(sinhVien);

        int id = sinhVienDaluu.getId();
        String ten = sinhVienDaluu.getTen();
        String lophoc = sinhVienDaluu.getLopHoc().getTen();
        String mon = String.join(",", sinhVienDaluu.getMonHoc());
        DefaultTableModel tbModel = (DefaultTableModel) tblSinhVien.getModel();

        tbModel.addRow(new Object[]{id, ten, lophoc, mon});

    }

    public void xoaThongTinSinhVien(int id) throws SQLException {
        this.sinhVienService.xoaThongTinSinhVien(id);
    }

    public List<SinhVien> layDanhSachSinhVien() {
        List<SinhVien> list = new ArrayList<>();
        list = this.sinhVienService.layDanhSachSinhVien();
        model.setNumRows(0);
        for (SinhVien sinhVien : list) {
            model.addRow(new Object[]{sinhVien.getId(), sinhVien.getTen(), sinhVien.getLopHoc().getTen(), sinhVien.getMonHoc()});
        }
        return list;

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SinhVienForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SinhVienForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SinhVienForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SinhVienForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SinhVienForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnADD;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbxLop;
    private javax.swing.JCheckBox ckbCplus;
    private javax.swing.JCheckBox ckbCsap;
    private javax.swing.JCheckBox ckbJava;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblSinhVien;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
